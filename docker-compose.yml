version: '3.9'

services:
  seed:
    container_name: seed
    hostname: seed
    build:
      context: ./seed
      args:
        buildno: 1
    networks:
      testing_net:
        ipv4_address: 172.28.1.1

  ordersvc:
    container_name: ordersvc
    hostname: ordersvc
    build:
      context: ./ordersvc
      args:
        buildno: 1
    environment:
      - DB_HOST=${DOCKER_GATEWAY_HOST:-host.docker.internal}
      - GDD_MEM_SEED=seed:56199
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    expose:
      - "6062"
    ports:
      - "6062:6062"
    networks:
      testing_net:
        ipv4_address: 172.28.1.2
    depends_on:
      - seed
      - usersvc
      - jaeger

  usersvc:
    container_name: usersvc
    hostname: usersvc
    build:
      context: ./usersvc
      args:
        buildno: 1
    environment:
      - DB_HOST=${DOCKER_GATEWAY_HOST:-host.docker.internal}
      - GDD_MEM_SEED=seed:56199
      - GDD_MEM_WEIGHT=5
      - GDD_MEM_NAME=
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    expose:
      - "6061"
    ports:
      - "6061:6061"
    networks:
      testing_net:
        ipv4_address: 172.28.1.3
    depends_on:
      - seed
      - jaeger

  usersvc01:
    container_name: usersvc01
    hostname: usersvc01
    build:
      context: ./usersvc
      args:
        buildno: 1
    environment:
      - DB_HOST=${DOCKER_GATEWAY_HOST:-host.docker.internal}
      - GDD_MEM_SEED=seed:56199
      - GDD_MEM_WEIGHT=1
      - GDD_MEM_NAME=
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    expose:
      - "6061"
    ports:
      - "6063:6061"
    networks:
      testing_net:
        ipv4_address: 172.28.1.4
    depends_on:
      - seed
      - jaeger

  usersvc02:
    container_name: usersvc02
    hostname: usersvc02
    build:
      context: ./usersvc
      args:
        buildno: 1
    environment:
      - DB_HOST=${DOCKER_GATEWAY_HOST:-host.docker.internal}
      - GDD_MEM_SEED=seed:56199
      - GDD_MEM_WEIGHT=1
      - GDD_MEM_NAME=
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    expose:
      - "6061"
    ports:
      - "6064:6061"
    networks:
      testing_net:
        ipv4_address: 172.28.1.5
    depends_on:
      - seed
      - jaeger

  jaeger:
    container_name: jaeger
    hostname: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      testing_net:
        ipv4_address: 172.28.1.6

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  grafana_data:
  prometheus_data: