// Code generated by go generate; DO NOT EDIT.
// This file was generated by go-doudou
package vo

import (
	"encoding/json"
	"reflect"

	"github.com/unionj-cloud/go-doudou/name/strategies"
)

func (object PageFilter) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if !reflect.ValueOf(object.Name).IsZero() {
		objectMap[strategies.LowerCaseConvert("Name")] = object.Name
	}
	if !reflect.ValueOf(object.Dept).IsZero() {
		objectMap[strategies.LowerCaseConvert("Dept")] = object.Dept
	}
	return json.Marshal(objectMap)
}

func (object Order) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if !reflect.ValueOf(object.Col).IsZero() {
		objectMap[strategies.LowerCaseConvert("Col")] = object.Col
	}
	if !reflect.ValueOf(object.Sort).IsZero() {
		objectMap[strategies.LowerCaseConvert("Sort")] = object.Sort
	}
	return json.Marshal(objectMap)
}

func (object Page) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if !reflect.ValueOf(object.Orders).IsZero() {
		objectMap[strategies.LowerCaseConvert("Orders")] = object.Orders
	}
	if !reflect.ValueOf(object.PageNo).IsZero() {
		objectMap[strategies.LowerCaseConvert("PageNo")] = object.PageNo
	}
	if !reflect.ValueOf(object.Size).IsZero() {
		objectMap[strategies.LowerCaseConvert("Size")] = object.Size
	}
	return json.Marshal(objectMap)
}

func (object PageQuery) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if !reflect.ValueOf(object.Filter).IsZero() {
		objectMap[strategies.LowerCaseConvert("Filter")] = object.Filter
	}
	if !reflect.ValueOf(object.Page).IsZero() {
		objectMap[strategies.LowerCaseConvert("Page")] = object.Page
	}
	return json.Marshal(objectMap)
}

func (object PageRet) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if !reflect.ValueOf(object.Items).IsZero() {
		objectMap[strategies.LowerCaseConvert("Items")] = object.Items
	}
	if !reflect.ValueOf(object.PageNo).IsZero() {
		objectMap[strategies.LowerCaseConvert("PageNo")] = object.PageNo
	}
	if !reflect.ValueOf(object.PageSize).IsZero() {
		objectMap[strategies.LowerCaseConvert("PageSize")] = object.PageSize
	}
	if !reflect.ValueOf(object.Total).IsZero() {
		objectMap[strategies.LowerCaseConvert("Total")] = object.Total
	}
	if !reflect.ValueOf(object.HasNext).IsZero() {
		objectMap[strategies.LowerCaseConvert("HasNext")] = object.HasNext
	}
	return json.Marshal(objectMap)
}

func (object UserVo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if !reflect.ValueOf(object.Id).IsZero() {
		objectMap[strategies.LowerCaseConvert("Id")] = object.Id
	}
	if !reflect.ValueOf(object.Name).IsZero() {
		objectMap[strategies.LowerCaseConvert("Name")] = object.Name
	}
	if !reflect.ValueOf(object.Phone).IsZero() {
		objectMap[strategies.LowerCaseConvert("Phone")] = object.Phone
	}
	if !reflect.ValueOf(object.Dept).IsZero() {
		objectMap[strategies.LowerCaseConvert("Dept")] = object.Dept
	}
	return json.Marshal(objectMap)
}
